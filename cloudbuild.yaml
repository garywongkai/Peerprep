steps:
  - name: "gcr.io/cloud-builders/npm"
    dir: "peerprep"
    args: ["install"]
  - name: "gcr.io/cloud-builders/npm"
    dir: "peerprep"
    args: ["run", "create-env"]
    env:
      - "REACT_APP_FIREBASE_API_KEY=${_REACT_APP_FIREBASE_API_KEY}"
      - "REACT_APP_FIREBASE_AUTH_DOMAIN=${_REACT_APP_FIREBASE_AUTH_DOMAIN}"
      - "REACT_APP_FIREBASE_DATABASE_URL=${_REACT_APP_FIREBASE_DATABASE_URL}"
      - "REACT_APP_FIREBASE_PROJECT_ID=${_REACT_APP_FIREBASE_PROJECT_ID}"
      - "REACT_APP_FIREBASE_STORAGE_BUCKET=${_REACT_APP_FIREBASE_STORAGE_BUCKET}"
      - "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${_REACT_APP_FIREBASE_MESSAGING_SENDER_ID}"
      - "REACT_APP_FIREBASE_APP_ID=${_REACT_APP_FIREBASE_APP_ID}"
      - "REACT_APP_FIREBASE_MEASUREMENT_ID=${_REACT_APP_FIREBASE_MEASUREMENT_ID}"
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "REACT_APP_ENV=${_NODE_ENV}"
  # build the container image using the docker builder
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "--build-arg",
        "REACT_APP_ENV=production",
        "-t",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA",
        "./peerprep",
      ]

  # push the container image to Container Registry (GCR)
  - name: "gcr.io/cloud-builders/docker"
    dir: "peerprep"
    args:
      ["push", "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA"]

  # Deploy the container image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    dir: "peerprep"
    args:
      - run
      - deploy
      - ${_SERVICE_NAME}
      - --image=${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA
      - --region=${_LOCATION}
      - --set-env-vars=REACT_APP_ENV=${_NODE_ENV}, REACT_APP_FIREBASE_API_KEY=${_REACT_APP_FIREBASE_API_KEY},REACT_APP_FIREBASE_AUTH_DOMAIN=${_REACT_APP_FIREBASE_AUTH_DOMAIN},REACT_APP_FIREBASE_DATABASE_URL=${_REACT_APP_FIREBASE_DATABASE_URL},REACT_APP_FIREBASE_PROJECT_ID=${_REACT_APP_FIREBASE_PROJECT_ID},REACT_APP_FIREBASE_STORAGE_BUCKET=${_REACT_APP_FIREBASE_STORAGE_BUCKET},REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${_REACT_APP_FIREBASE_MESSAGING_SENDER_ID},REACT_APP_FIREBASE_APP_ID=${_REACT_APP_FIREBASE_APP_ID},REACT_APP_FIREBASE_MEASUREMENT_ID=${_REACT_APP_FIREBASE_MEASUREMENT_ID}
      - --platform=managed

  # Service steps
  - name: "gcr.io/cloud-builders/npm"
    dir: "question-service"
    args: ["install"]

  - name: "gcr.io/cloud-builders/npm"
    dir: "question-service"
    args: ["run", "create-env"]
    env:
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "MONGO_DB_URI=${_REACT_APP_MONGO_DB_URI}"
      - "REACT_APP_ENV=${_NODE_ENV}"

  # build the service container image
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "--build-arg",
        "REACT_APP_ENV=production",
        "-t",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_SERVICE}:$COMMIT_SHA",
        "./question-service",
      ]

  # push the service container image to Container Registry (GCR)
  - name: "gcr.io/cloud-builders/docker"
    dir: "question-service"
    args:
      [
        "push",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_SERVICE}:$COMMIT_SHA",
      ]

  # Deploy the service container image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    dir: "question-service"
    args:
      - run
      - deploy
      - ${_SERVICE_NAME_SERVICE}
      - --image=${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_SERVICE}:$COMMIT_SHA
      - --region=${_LOCATION}
      - --set-env-vars=REACT_APP_ENV=${_NODE_ENV}, MONGO_DB_URI=${_REACT_APP_MONGO_DB_URI}, COMMIT_SHA=${COMMIT_SHA}
      - --platform=managed

  - name: "gcr.io/cloud-builders/npm"
    dir: "user-service"
    args: ["install"]
  - name: "gcr.io/cloud-builders/npm"
    dir: "user-service"
    args: ["run", "create-env"]
    env:
      - "REACT_APP_FIREBASE_API_KEY=${_REACT_APP_FIREBASE_API_KEY}"
      - "REACT_APP_FIREBASE_AUTH_DOMAIN=${_REACT_APP_FIREBASE_AUTH_DOMAIN}"
      - "REACT_APP_FIREBASE_DATABASE_URL=${_REACT_APP_FIREBASE_DATABASE_URL}"
      - "REACT_APP_FIREBASE_PROJECT_ID=${_REACT_APP_FIREBASE_PROJECT_ID}"
      - "REACT_APP_FIREBASE_STORAGE_BUCKET=${_REACT_APP_FIREBASE_STORAGE_BUCKET}"
      - "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${_REACT_APP_FIREBASE_MESSAGING_SENDER_ID}"
      - "REACT_APP_FIREBASE_APP_ID=${_REACT_APP_FIREBASE_APP_ID}"
      - "REACT_APP_FIREBASE_MEASUREMENT_ID=${_REACT_APP_FIREBASE_MEASUREMENT_ID}"
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "USER_SERVICE_TYPE=${_USER_SERVICE_TYPE}"
      - "USER_SERVICE_PROJECT_ID=${_USER_SERVICE_PROJECT_ID}"
      - "USER_SERVICE_PRIVATE_KEY_ID=${_USER_SERVICE_PRIVATE_KEY_ID}"
      - "USER_SERVICE_PRIVATE_KEY=${_USER_SERVICE_PRIVATE_KEY}"
      - "USER_SERVICE_CLIENT_EMAIL=${_USER_SERVICE_CLIENT_EMAIL}"
      - "USER_SERVICE_CLIENT_ID=${_USER_SERVICE_CLIENT_ID}"
      - "USER_SERVICE_AUTH_URI=${_USER_SERVICE_AUTH_URI}"
      - "USER_SERVICE_TOKEN_URI=${_USER_SERVICE_TOKEN_URI}"
      - "USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL=${_USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL}"
      - "USER_SERVICE_CLIENT_X509_CERT_URL=${_USER_SERVICE_CLIENT_X509_CERT_URL}"
      - "USER_SERVICE_UNIVERSE_DOMAIN=${_USER_SERVICE_UNIVERSE_DOMAIN}"
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "REACT_APP_ENV=${_NODE_ENV}"

  # build the container image using the docker builder
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "--build-arg",
        "NODE_ENV=production",
        "-t",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_USER}:$COMMIT_SHA",
        "./user-service",
      ]

  # push the container image to Container Registry (GCR)
  - name: "gcr.io/cloud-builders/docker"
    dir: "user-service"
    args:
      [
        "push",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_USER}:$COMMIT_SHA",
      ]

  # Deploy the container image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    dir: "user-service"
    args:
      - run
      - deploy
      - ${_SERVICE_NAME_USER}
      - --image=${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_USER}:$COMMIT_SHA
      - --region=${_LOCATION}
      - --set-env-vars=REACT_APP_ENV=${_NODE_ENV}, USER_SERVICE_TYPE=${_USER_SERVICE_TYPE},USER_SERVICE_PROJECT_ID=${_USER_SERVICE_PROJECT_ID},USER_SERVICE_PRIVATE_KEY_ID=${_USER_SERVICE_PRIVATE_KEY_ID},USER_SERVICE_PRIVATE_KEY=${_USER_SERVICE_PRIVATE_KEY},USER_SERVICE_CLIENT_EMAIL=${_USER_SERVICE_CLIENT_EMAIL},USER_SERVICE_CLIENT_ID=${_USER_SERVICE_CLIENT_ID},USER_SERVICE_AUTH_URI=${_USER_SERVICE_AUTH_URI},USER_SERVICE_TOKEN_URI=${_USER_SERVICE_TOKEN_URI},USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL=${_USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL},USER_SERVICE_CLIENT_X509_CERT_URL=${_USER_SERVICE_CLIENT_X509_CERT_URL},USER_SERVICE_UNIVERSE_DOMAIN=${_USER_SERVICE_UNIVERSE_DOMAIN},COMMIT_SHA=${COMMIT_SHA}
      - --platform=managed

  - name: "gcr.io/cloud-builders/npm"
    dir: "matching-service"
    args: ["install"]
  - name: "gcr.io/cloud-builders/npm"
    dir: "matching-service"
    args: ["run", "create-env"]
    env:
      - "REACT_APP_FIREBASE_API_KEY=${_REACT_APP_FIREBASE_API_KEY}"
      - "REACT_APP_FIREBASE_AUTH_DOMAIN=${_REACT_APP_FIREBASE_AUTH_DOMAIN}"
      - "REACT_APP_FIREBASE_DATABASE_URL=${_REACT_APP_FIREBASE_DATABASE_URL}"
      - "REACT_APP_FIREBASE_PROJECT_ID=${_REACT_APP_FIREBASE_PROJECT_ID}"
      - "REACT_APP_FIREBASE_STORAGE_BUCKET=${_REACT_APP_FIREBASE_STORAGE_BUCKET}"
      - "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${_REACT_APP_FIREBASE_MESSAGING_SENDER_ID}"
      - "REACT_APP_FIREBASE_APP_ID=${_REACT_APP_FIREBASE_APP_ID}"
      - "REACT_APP_FIREBASE_MEASUREMENT_ID=${_REACT_APP_FIREBASE_MEASUREMENT_ID}"
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "USER_SERVICE_TYPE=${_USER_SERVICE_TYPE}"
      - "USER_SERVICE_PROJECT_ID=${_USER_SERVICE_PROJECT_ID}"
      - "USER_SERVICE_PRIVATE_KEY_ID=${_USER_SERVICE_PRIVATE_KEY_ID}"
      - "USER_SERVICE_PRIVATE_KEY=${_USER_SERVICE_PRIVATE_KEY}"
      - "USER_SERVICE_CLIENT_EMAIL=${_USER_SERVICE_CLIENT_EMAIL}"
      - "USER_SERVICE_CLIENT_ID=${_USER_SERVICE_CLIENT_ID}"
      - "USER_SERVICE_AUTH_URI=${_USER_SERVICE_AUTH_URI}"
      - "USER_SERVICE_TOKEN_URI=${_USER_SERVICE_TOKEN_URI}"
      - "USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL=${_USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL}"
      - "USER_SERVICE_CLIENT_X509_CERT_URL=${_USER_SERVICE_CLIENT_X509_CERT_URL}"
      - "USER_SERVICE_UNIVERSE_DOMAIN=${_USER_SERVICE_UNIVERSE_DOMAIN}"
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "REACT_APP_ENV=${_NODE_ENV}"

  # build the container image using the docker builder
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "--build-arg",
        "NODE_ENV=production",
        "-t",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_MATCHING}:$COMMIT_SHA",
        "./matching-service",
      ]

  # push the container image to Container Registry (GCR)
  - name: "gcr.io/cloud-builders/docker"
    dir: "matching-service"
    args:
      [
        "push",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_MATCHING}:$COMMIT_SHA",
      ]

  # Deploy the container image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    dir: "matching-service"
    args:
      - run
      - deploy
      - ${_SERVICE_NAME_MATCHING}
      - --image=${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_MATCHING}:$COMMIT_SHA
      - --region=${_LOCATION}
      - --set-env-vars=REACT_APP_ENV=${_NODE_ENV}, USER_SERVICE_TYPE=${_USER_SERVICE_TYPE},USER_SERVICE_PROJECT_ID=${_USER_SERVICE_PROJECT_ID},USER_SERVICE_PRIVATE_KEY_ID=${_USER_SERVICE_PRIVATE_KEY_ID},USER_SERVICE_PRIVATE_KEY=${_USER_SERVICE_PRIVATE_KEY},USER_SERVICE_CLIENT_EMAIL=${_USER_SERVICE_CLIENT_EMAIL},USER_SERVICE_CLIENT_ID=${_USER_SERVICE_CLIENT_ID},USER_SERVICE_AUTH_URI=${_USER_SERVICE_AUTH_URI},USER_SERVICE_TOKEN_URI=${_USER_SERVICE_TOKEN_URI},USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL=${_USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL},USER_SERVICE_CLIENT_X509_CERT_URL=${_USER_SERVICE_CLIENT_X509_CERT_URL},USER_SERVICE_UNIVERSE_DOMAIN=${_USER_SERVICE_UNIVERSE_DOMAIN},COMMIT_SHA=${COMMIT_SHA}
      - --platform=managed

  - name: "gcr.io/cloud-builders/npm"
    dir: "collaboration-service"
    args: ["install"]
  - name: "gcr.io/cloud-builders/npm"
    dir: "collaboration-service"
    args: ["run", "create-env"]
    env:
      - "REACT_APP_FIREBASE_API_KEY=${_REACT_APP_FIREBASE_API_KEY}"
      - "REACT_APP_FIREBASE_AUTH_DOMAIN=${_REACT_APP_FIREBASE_AUTH_DOMAIN}"
      - "REACT_APP_FIREBASE_DATABASE_URL=${_REACT_APP_FIREBASE_DATABASE_URL}"
      - "REACT_APP_FIREBASE_PROJECT_ID=${_REACT_APP_FIREBASE_PROJECT_ID}"
      - "REACT_APP_FIREBASE_STORAGE_BUCKET=${_REACT_APP_FIREBASE_STORAGE_BUCKET}"
      - "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${_REACT_APP_FIREBASE_MESSAGING_SENDER_ID}"
      - "REACT_APP_FIREBASE_APP_ID=${_REACT_APP_FIREBASE_APP_ID}"
      - "REACT_APP_FIREBASE_MEASUREMENT_ID=${_REACT_APP_FIREBASE_MEASUREMENT_ID}"
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "USER_SERVICE_TYPE=${_USER_SERVICE_TYPE}"
      - "USER_SERVICE_PROJECT_ID=${_USER_SERVICE_PROJECT_ID}"
      - "USER_SERVICE_PRIVATE_KEY_ID=${_USER_SERVICE_PRIVATE_KEY_ID}"
      - "USER_SERVICE_PRIVATE_KEY=${_USER_SERVICE_PRIVATE_KEY}"
      - "USER_SERVICE_CLIENT_EMAIL=${_USER_SERVICE_CLIENT_EMAIL}"
      - "USER_SERVICE_CLIENT_ID=${_USER_SERVICE_CLIENT_ID}"
      - "USER_SERVICE_AUTH_URI=${_USER_SERVICE_AUTH_URI}"
      - "USER_SERVICE_TOKEN_URI=${_USER_SERVICE_TOKEN_URI}"
      - "USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL=${_USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL}"
      - "USER_SERVICE_CLIENT_X509_CERT_URL=${_USER_SERVICE_CLIENT_X509_CERT_URL}"
      - "USER_SERVICE_UNIVERSE_DOMAIN=${_USER_SERVICE_UNIVERSE_DOMAIN}"
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "REACT_APP_ENV=${_NODE_ENV}"

  # build the container image using the docker builder
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "--build-arg",
        "NODE_ENV=production",
        "-t",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_COLLAB}:$COMMIT_SHA",
        "./collaboration-service",
      ]

  # push the container image to Container Registry (GCR)
  - name: "gcr.io/cloud-builders/docker"
    dir: "collaboration-service"
    args:
      [
        "push",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_COLLAB}:$COMMIT_SHA",
      ]

  # Deploy the container image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    dir: "collaboration-service"
    args:
      - run
      - deploy
      - ${_SERVICE_NAME_COLLAB}
      - --image=${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_COLLAB}:$COMMIT_SHA
      - --region=${_LOCATION}
      - --set-env-vars=REACT_APP_ENV=${_NODE_ENV}, USER_SERVICE_TYPE=${_USER_SERVICE_TYPE},USER_SERVICE_PROJECT_ID=${_USER_SERVICE_PROJECT_ID},USER_SERVICE_PRIVATE_KEY_ID=${_USER_SERVICE_PRIVATE_KEY_ID},USER_SERVICE_PRIVATE_KEY=${_USER_SERVICE_PRIVATE_KEY},USER_SERVICE_CLIENT_EMAIL=${_USER_SERVICE_CLIENT_EMAIL},USER_SERVICE_CLIENT_ID=${_USER_SERVICE_CLIENT_ID},USER_SERVICE_AUTH_URI=${_USER_SERVICE_AUTH_URI},USER_SERVICE_TOKEN_URI=${_USER_SERVICE_TOKEN_URI},USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL=${_USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL},USER_SERVICE_CLIENT_X509_CERT_URL=${_USER_SERVICE_CLIENT_X509_CERT_URL},USER_SERVICE_UNIVERSE_DOMAIN=${_USER_SERVICE_UNIVERSE_DOMAIN},COMMIT_SHA=${COMMIT_SHA}
      - --platform=managed
  - name: "gcr.io/cloud-builders/npm"
    dir: "code-execution-service"
    args: ["install"]
  - name: "gcr.io/cloud-builders/npm"
    dir: "code-execution-service"
    args: ["run", "create-env"]
    env:
      - "REACT_APP_FIREBASE_API_KEY=${_REACT_APP_FIREBASE_API_KEY}"
      - "REACT_APP_FIREBASE_AUTH_DOMAIN=${_REACT_APP_FIREBASE_AUTH_DOMAIN}"
      - "REACT_APP_FIREBASE_DATABASE_URL=${_REACT_APP_FIREBASE_DATABASE_URL}"
      - "REACT_APP_FIREBASE_PROJECT_ID=${_REACT_APP_FIREBASE_PROJECT_ID}"
      - "REACT_APP_FIREBASE_STORAGE_BUCKET=${_REACT_APP_FIREBASE_STORAGE_BUCKET}"
      - "REACT_APP_FIREBASE_MESSAGING_SENDER_ID=${_REACT_APP_FIREBASE_MESSAGING_SENDER_ID}"
      - "REACT_APP_FIREBASE_APP_ID=${_REACT_APP_FIREBASE_APP_ID}"
      - "REACT_APP_FIREBASE_MEASUREMENT_ID=${_REACT_APP_FIREBASE_MEASUREMENT_ID}"
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "USER_SERVICE_TYPE=${_USER_SERVICE_TYPE}"
      - "USER_SERVICE_PROJECT_ID=${_USER_SERVICE_PROJECT_ID}"
      - "USER_SERVICE_PRIVATE_KEY_ID=${_USER_SERVICE_PRIVATE_KEY_ID}"
      - "USER_SERVICE_PRIVATE_KEY=${_USER_SERVICE_PRIVATE_KEY}"
      - "USER_SERVICE_CLIENT_EMAIL=${_USER_SERVICE_CLIENT_EMAIL}"
      - "USER_SERVICE_CLIENT_ID=${_USER_SERVICE_CLIENT_ID}"
      - "USER_SERVICE_AUTH_URI=${_USER_SERVICE_AUTH_URI}"
      - "USER_SERVICE_TOKEN_URI=${_USER_SERVICE_TOKEN_URI}"
      - "USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL=${_USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL}"
      - "USER_SERVICE_CLIENT_X509_CERT_URL=${_USER_SERVICE_CLIENT_X509_CERT_URL}"
      - "USER_SERVICE_UNIVERSE_DOMAIN=${_USER_SERVICE_UNIVERSE_DOMAIN}"
      - "COMMIT_SHA=${COMMIT_SHA}"
      - "REACT_APP_ENV=${_NODE_ENV}"
      - "JUDGE0_API_KEY=${_JUDGE0_API_KEY}"

  # build the container image using the docker builder
  - name: "gcr.io/cloud-builders/docker"
    args:
      [
        "build",
        "--build-arg",
        "NODE_ENV=production",
        "--build-arg",
        "DOCKER_HOST=unix:///var/run/docker.sock",
        "-t",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_CODE}:$COMMIT_SHA",
        "./code-execution-service",
      ]

  # push the container image to Container Registry (GCR)
  - name: "gcr.io/cloud-builders/docker"
    dir: "code-execution-service"
    args:
      [
        "push",
        "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_CODE}:$COMMIT_SHA",
      ]

  # Deploy the container image to Cloud Run
  - name: "gcr.io/cloud-builders/gcloud"
    dir: "code-execution-service"
    args:
      - run
      - deploy
      - ${_SERVICE_NAME_CODE}
      - --image=${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_CODE}:$COMMIT_SHA
      - --region=${_LOCATION}
      - --set-env-vars=REACT_APP_ENV=${_NODE_ENV}, USER_SERVICE_TYPE=${_USER_SERVICE_TYPE},USER_SERVICE_PROJECT_ID=${_USER_SERVICE_PROJECT_ID},USER_SERVICE_PRIVATE_KEY_ID=${_USER_SERVICE_PRIVATE_KEY_ID},USER_SERVICE_PRIVATE_KEY=${_USER_SERVICE_PRIVATE_KEY},USER_SERVICE_CLIENT_EMAIL=${_USER_SERVICE_CLIENT_EMAIL},USER_SERVICE_CLIENT_ID=${_USER_SERVICE_CLIENT_ID},USER_SERVICE_AUTH_URI=${_USER_SERVICE_AUTH_URI},USER_SERVICE_TOKEN_URI=${_USER_SERVICE_TOKEN_URI},USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL=${_USER_SERVICE_AUTH_PROVIDER_X509_CERT_URL},USER_SERVICE_CLIENT_X509_CERT_URL=${_USER_SERVICE_CLIENT_X509_CERT_URL},USER_SERVICE_UNIVERSE_DOMAIN=${_USER_SERVICE_UNIVERSE_DOMAIN},COMMIT_SHA=${COMMIT_SHA}
      - --platform=managed
      - --set-env-vars=DOCKER_HOST=unix:///var/run/docker.sock, NODE_ENV=production
images:
  - "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME}:$COMMIT_SHA"
  - "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_SERVICE}:$COMMIT_SHA"
  - "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_USER}:$COMMIT_SHA"
  - "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_MATCHING}:$COMMIT_SHA"
  - "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_COLLAB}:$COMMIT_SHA"
  - "${_GCR_REGION}.gcr.io/$PROJECT_ID/${_SERVICE_NAME_CODE}:$COMMIT_SHA"
# secretEnv:
#   [
#     "REACT_APP_FIREBASE_API_KEY",
#     "REACT_APP_FIREBASE_AUTH_DOMAIN",
#     "REACT_APP_FIREBASE_DATABASE_URL",
#     "REACT_APP_FIREBASE_PROJECT_ID",
#     "REACT_APP_FIREBASE_STORAGE_BUCKET",
#     "REACT_APP_FIREBASE_MESSAGING_SENDER_ID",
#     "REACT_APP_FIREBASE_APP_ID",
#     "REACT_APP_FIREBASE_MEASUREMENT_ID",
#   ]

substitutions:
  _LOCATION: asia-southeast1 # must be substituted
  _GCR_REGION: asia # must be substituted
  _SERVICE_NAME: peerprep # must be substituted
  _SERVICE_NAME_SERVICE: question-service
  _SERVICE_NAME_USER: user-service
  _SERVICE_NAME_MATCHING: matching-service
  _SERVICE_NAME_COLLAB: collaboration-service
  _SERVICE_NAME_CODE: code-execution-service
  _NODE_ENV: production
timeout: "1600s"
options:
  logging: CLOUD_LOGGING_ONLY
# availableSecrets:
#   secretManager:
#     - versionName: projects/$PROJECT_ID/secrets/MONGO_DB_URI/versions/latest
#       env: "MONGO_DB_URI"
# availableSecrets:
#   secretManager:
#     - versionName: projects/327190433280/secrets/firebase/versions/1
#       env: REACT_APP_FIREBASE_API_KEY

#         - REACT_APP_FIREBASE_AUTH_DOMAIN
#         - REACT_APP_FIREBASE_DATABASE_URL
#         - REACT_APP_FIREBASE_PROJECT_ID
#         - REACT_APP_FIREBASE_STORAGE_BUCKET
#         - REACT_APP_FIREBASE_MESSAGING_SENDER_ID
#         - REACT_APP_FIREBASE_APP_ID
#         - REACT_APP_FIREBASE_MEASUREMENT_ID
